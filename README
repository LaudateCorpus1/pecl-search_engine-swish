README for PHP Swish-e bindings
===============================
$Id$

This extension provides bindings to the swish-e API.

Swish-e is a GPL licensed search engine, with a clause that allows applications
to link against the libswish-e library to use the published API to do so
without invoking the viral portion of the GPL.  This is subject to returning a
link back to the swish-e source code.

Here it is:
http://swish-e.org/index.html

How do I use this?
==================

First you need to have built a swish index.  Consult the swish docs for details
on that: http://swish-e.org/docs/index.html

% swish-e -i /path/to/stuff/to/index

Now build this PHP module:

% phpize
% configure --with-swish=/usr/local
% make
% su -
# make install
# echo 'extension=swish.so' >> /usr/local/lib/php.ini


Then you can code up an interface to the index using PHP:

<?php
$h = new SwishHandle("index.swish-e");
$results = $h->query("lemons");
echo "There are ", $results->getHits(), " lemons\n";
while ($r = $results->nextResult()) {
	printf("in file %s, relevance %d\n",
		$r->property("swishdocpath"),
		$r->property("swishrank")
		);
}
?>

Brief API reference:
====================
(grep -C1 proto swish.c)

See http://swish-e.org/docs/swish-library.html for more background.

void SwishHandle::__construct(string indices)
   Open a swish index */

SwishSearch SwishHandle::prepare([string query])
   Returns a new search object */

SwishResults SwishHandle::query(string query)
   Executes a search, returning the result object */   

void SwishSearch::setStructure(int structure)
   Sets the "structure" flag in the search object */

void SwishSearch::setPhraseDelimiter(string delim)
   Sets the phrase delimiter character, the default is double-quotes. */

void SwishSearch::setSort(string sort)
   Sets the sort order of the results */

void SwishSearch::setSearchLimit(string prop, string low, string hi)
   Sets the limit parameters for a search */

void SwishSearch::resetSearchLimit()
   resets the limit parameters for a search */

SwishSearch SwishSearch::execute([string query])
   Returns a new search object */

void SwishResults::getHits()
   Returns the number of results in the results object. */

long SwishResults::seekResult(long position)
   Sets the current seek position in the list of results. 0 is the first. Returns negative number on error */

SwishResult SwishResults::nextResult()
   Advances to the next result.  Returns false when there are no more results. */

mixed SwishResult::property(string prop)
   Returns the value of a property */


vim:ts=2:sw=2:et:
